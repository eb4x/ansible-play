- name: deploy linodes
  hosts: localhost

  vars:
    nodes:
      - name: peggy
        type: g6-nanode-1
        region: us-east
        image: linode/ubuntu18.04
      - name: regan
        type: g6-nanode-1
        region: eu-west
        image: linode/centos7
      - name: sofia
        type: g6-nanode-1
        region: eu-central
        image: linode/debian9
      - name: tracy
        type: g6-nanode-1
        region: us-central
        image: linode/ubuntu16.04lts

# "us-central":   Dallas,  TX
# "us-east":      Newark,  NJ
# "us-southeast": Atlanta, GA
# "us-west":      Fremont, CA

  pre_tasks:
    - name: include secrets (linode_{auth_token,root_pass})
      include_vars: "secrets.yml"

  tasks:
#    - name: query regions
#      uri:
#        url: https://api.linode.com/v4/regions
#        headers:
#          Authorization: "Bearer {{ linode_auth_token }}"
#      register: _lr
#
#    - set_fact:
#        _linode_regions: "{{ _linode_regions | default({}) | combine({ item.id : item.country }) }}"
#      with_items: "{{ _lr.json.data }}"
#
#    - name: query images
#      uri:
#        url: https://api.linode.com/v4/images
#        headers:
#          Authorization: "Bearer {{ linode_auth_token }}"
#      register: _li
#
#    - set_fact:
#        _linode_images: "{{ _linode_images | default({}) | combine({ item.id : item.label }) }}"
#      with_items: "{{ _li.json.data }}"
#
#    - name: query types
#      uri:
#        url: https://api.linode.com/v4/linode/types
#        headers:
#          Authorization: "Bearer {{ linode_auth_token }}"
#      register: _lt
#
#    - set_fact:
#        _linode_types: "{{ _linode_types | default({}) | combine({ item.id : item.label }) }}"
#      with_items: "{{ _lt.json.data }}"

    - name: query linodes
      uri:
        url: https://api.linode.com/v4/linode/instances
        headers:
          Authorization: "Bearer {{ linode_auth_token }}"
        return_content: true
      register: _ls

    - set_fact:
        _linodes: "{{ _linodes | default({}) | combine({ item.label : item.id }) }}"
      with_items: "{{ _ls.json.data }}"

###

    - debug:
        var: _linodes
      when: _linodes is defined

    - debug:
        var: _linode_regions
      when: _linode_regions is defined

    - debug:
        var: _linode_types
      when: _linode_types is defined

    - debug:
        var: _linode_images
      when: _linode_images is defined

###

    - name: create linode
      uri:
        method: POST
        url: https://api.linode.com/v4/linode/instances
        headers:
          Authorization: "Bearer {{ linode_auth_token }}"
        body_format: json
        body:
          type: "{{ item.type }}"
          region: "{{ item.region }}"
          authorized_keys:
            - "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
          image: "{{ item.image }}"
          root_pass: "{{ linode_root_pass }}"
          label: "{{ item.name }}"
        return_content: true
      with_items: "{{ nodes }}"
      when: item.name not in ((_linodes | default({})) | list)
      register: _linodes_created

#    - debug:
#        var: item
#      with_items: "{{ _linodes_created.results }}"

    - debug:
        var: item.json.ipv4
      with_items: "{{ _linodes_created.results }}"
      when: item.json is defined

    - name: create inventory/linodes file
      lineinfile:
        path: inventory/linodes
        create: true
        line: "[linodes]"

    - name: populate inventory/linodes file
      lineinfile:
        path: inventory/linodes
        regexp: "^{{ item.item.name }} *"
        line: "{{ item.item.name }} ansible_host={{ item.json.ipv4[0] }}"
      with_items: "{{ _linodes_created.results }}"
      when: item.json is defined
